# Generated by Django 2.2.4 on 2020-11-28 21:32

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('property', '0004_auto_20201125_1358'),
    ]

    operations = [
        migrations.CreateModel(
            name='Complaint',
            fields=[
                ('user_ptr', models.OneToOneField(
                    auto_created=True,
                    on_delete=django.db.models.deletion.CASCADE,
                    parent_link=True, primary_key=True,
                    serialize=False,
                    to=settings.AUTH_USER_MODEL)),
                ('complain_text', models.CharField(blank=True, max_length=200,
                                                   verbose_name='Текст жалобы')),
                ('flat', models.ForeignKey(
                    blank=True,
                    null=True,
                    on_delete=django.db.models.deletion.SET_NULL,
                    related_name='flat_complained',
                    to='property.Flat',
                    verbose_name='Квартира, на которую жаловались')),
                ('who_complained', models.ForeignKey(
                    blank=True,
                    max_length=200,
                    null=True,
                    on_delete=django.db.models.deletion.SET_NULL,
                    related_name='human_name',
                    to=settings.AUTH_USER_MODEL,
                    verbose_name='Кто жаловался')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='flat',
            name='liked_by',
            field=models.ManyToManyField(related_name='liked_flats',
                                         to='property.Complaint',
                                         verbose_name='Кто лайкнул'),
        ),
    ]
